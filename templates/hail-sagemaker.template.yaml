AWSTemplateFormatVersion: "2010-09-09"
Description: "SageMaker Notebook Instance for use with Hail on EMR (qs-1qp776mht)"

Parameters:

  pAllowSsmShell:
    AllowedValues:
      - "false"
      - "true"
    Default: "true"
    Description: "Must also be set to true on EMR CloudFormation stacks."
    Type: "String"

  pInstanceType:
    AllowedValues:
      - "ml.t2.medium"
      - "ml.t2.large"
      - "ml.t2.xlarge"
      - "ml.t2.2xlarge"
      - "ml.t3.medium"
      - "ml.t3.large"
      - "ml.t3.xlarge"
      - "ml.t3.2large"
    Default: "ml.t3.medium"
    Description: ""
    Type: "String"

  pName:
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    Description: "Notebook instance name. Also used as the S3 prefix for home directory backups.  A username is recommended - e.g. jsmith"
    Type: "String"

  pSageMakerBucket:
    Description: "DO NOT CHANGE. SSM parameter set by the hail-s3 stack.  S3 bucket with scripts, common notebooks, and home directory backups."
    Type: "AWS::SSM::Parameter::Value<String>"
    Default: "/hail/s3/sagemaker"
    AllowedValues:
      - "/hail/s3/sagemaker"

  pHailBucket:
    Description: "DO NOT CHANGE. SSM parameter set by the hail-s3 stack.  S3 bucket that stores EMR logs, cluster manifests, and VEP configuration files.  The notebook instance will have full read acess to this bucket."
    Type: "AWS::SSM::Parameter::Value<String>"
    Default: "/hail/s3/hail"
    AllowedValues:
      - "/hail/s3/hail"

  pSubnetId:
    Description: "DO NOT CHANGE. SSM parameter set by the hail-core stack. Subnet ID in which the SageMaker Notebook Instance will be launched."
    Default: "/hail/vpc/subnet-id"
    Type: "AWS::SSM::Parameter::Value<String>"
    AllowedValues:
      - "/hail/vpc/subnet-id"

  pSubnetType:
    Description: "DO NOT CHANGE. SSM parameter set by the hail-core stack. Type of subnet the notebook instance will be deployed in"
    Default: "/hail/vpc/subnet-type"
    Type: "AWS::SSM::Parameter::Value<String>"
    AllowedValues:
      - "/hail/vpc/subnet-type"

  pTagEnvironment:
    AllowedValues:
      - "production"
      - "staging"
      - "development"
      - ""
    Default: ""
    Description: "(Optional) Environment type for default resource tagging."
    Type: "String"

  pTagOwner:
    Default: ""
    Description: "(Optional) Owner for default resource tagging. Suggested values are <User Name>, <Department Name>, <Project Name>, etc."
    Type: "String"

  pVolumeSize:
    Default: "20"
    Description: "Notebook instance data volume size (GB)."
    MaxValue: "500"
    MinValue: "5"
    Type: "Number"

  pSgSagemaker:
    Description: "DO NOT CHANGE. SSM parameter set by the hail-core stack.  This security group ID will be attached to the notebook instance."
    Type: "AWS::SSM::Parameter::Value<String>"
    Default: "/hail/sagemaker/security-group-id"
    AllowedValues:
      - "/hail/sagemaker/security-group-id"

  pKmsEbsArn:
    Description: "(Optional) The full KMS Key ARN if region level EBS encryption is enabled. Note, this does NOT automatically encrypt your AMI."
    Default: ""
    Type: "String"

  pUsePermissionBoundary:
    Type: "String"
    Description: "Select yes to use an existing Permission Boundary."
    AllowedValues:
      - "yes"
      - "no"
    Default: "no"

  pPermissionBoundaryARN:
    Description: "Enter Permission Boundary ARN."
    Type: "String"
    Default: ""

  pUseIamPrefix:
    Type: "String"
    Description: "Select yes to incorporate a required prefix in IAM Role and Policy Names."
    AllowedValues:
      - "yes"
      - "no"
    Default: "no"

  pIamPrefix:
    Description: "Enter required IAM prefix."
    Type: "String"
    Default: ""

  pUseIamSuffix:
    Type: "String"
    Description: "Select yes to incorporate a required suffix in IAM Role and Policy Names."
    AllowedValues:
      - "yes"
      - "no"
    Default: "no"

  pIamSuffix:
    Description: "Enter required IAM suffix."
    Type: "String"
    Default: ""


Metadata:

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Network Configuration"
        Parameters:
          - "pSubnetId"
          - "pSubnetType"
          - "pSgSagemaker"
      - Label:
          default: "Notebook Instance Configuration"
        Parameters:
          - "pName"
          - "pInstanceType"
          - "pVolumeSize"
          - "pAllowSsmShell"
          - "pKmsEbsArn"
      - Label:
          default: "S3 Configuration"
        Parameters:
          - "pHailBucket"
          - "pSageMakerBucket"
      - Label:
          default: "Identity and Access Management"
        Parameters:
          - "pUsePermissionBoundary"
          - "pPermissionBoundaryARN"
          - "pUseIamPrefix"
          - "pIamPrefix"
          - "pUseIamSuffix"
          - "pIamSuffix"
      - Label:
          default: "Tagging"
        Parameters:
          - "pTagEnvironment"
          - "pTagOwner"
    ParameterLabels:
      pAllowSsmShell:
        default: "Allow SSM Shell Access to EMR Nodes"
      pSubnetId:
        default: "SSM Parameter for Subnet ID"
      pSubnetType:
        default: "SSM Parameter for Subnet Type"
      pName:
        default: "Instance Name"
      pInstanceType:
        default: "Instance Type"
      pVolumeSize:
        default: "Volume Size"
      pKmsEbsArn:
        default: "EBS KMS Key ARN"
      pHailBucket:
        default: "SSM Parameter for Hail Bucket"
      pSageMakerBucket:
        default: "SSM Parameter for SageMaker Bucket"
      pSgSagemaker:
        default: "SSM Parameter for SageMaker Security Group ID"
      pTagOwner:
        default: "Owner"
      pTagEnvironment:
        default: "Environment"
      pUsePermissionBoundary:
        default: "Use Permission Boundary"
      pPermissionBoundaryARN:
        default: "Permission Boundary ARN"
      pUseIamPrefix:
        default: "Add custom prefix to all roles created"
      pIamPrefix:
        default: "Prefix for all roles to be created"
      pUseIamSuffix:
        default: "Add custom suffix to all roles created"
      pIamSuffix:
        default: "Suffix for all roles to be created"

Conditions:

  CondAllowSsmShell: !Equals [!Ref pAllowSsmShell, "true"]
  CondEnableEncryption: !Not [ !Equals [ !Ref pKmsEbsArn, "" ] ]
  CondSubnetTypePrivate: !Equals [!Ref pSubnetType, "private"]
  UsingPermissionBoundary: !Equals [!Ref pUsePermissionBoundary, "yes"]
  UsingIamPrefix: !Equals [!Ref pUseIamPrefix, "yes"]
  UsingIamSuffix: !Equals [!Ref pUseIamSuffix, "yes"]

Resources:

  instance:
    Type: "AWS::SageMaker::NotebookInstance"
    Properties:
      DirectInternetAccess: !If [ CondSubnetTypePrivate, "Disabled", "Enabled"]
      InstanceType: !Ref pInstanceType
      RoleArn: !GetAtt role.Arn
      LifecycleConfigName: !GetAtt lifecycleConfiguration.NotebookInstanceLifecycleConfigName
      NotebookInstanceName: !Ref pName
      RootAccess: Enabled
      KmsKeyId: !If [ CondEnableEncryption, !Ref pKmsEbsArn, !Ref "AWS::NoValue"]
      SubnetId: !Ref pSubnetId
      VolumeSizeInGB: !Ref pVolumeSize
      SecurityGroupIds:
        - !Ref pSgSagemaker
      Tags:
        - Key: "Name"
          Value: !Ref pName
        - Key: "environment"
          Value: !Ref pTagEnvironment
        - Key: "owner"
          Value: !Ref pTagOwner

  lifecycleConfiguration:
    Type: "AWS::SageMaker::NotebookInstanceLifecycleConfig"
    Properties:
      NotebookInstanceLifecycleConfigName: !Sub "${pName}"
      OnCreate:
        - Content:
            Fn::Base64: !Sub |
              #!/bin/bash
              set -ex

              BUCKET="${pSageMakerBucket}"
              EC2_USER_BIN="/home/ec2-user/SageMaker/bin/"
              ENVIRONMENT="JupyterSystemEnv"

              sudo -u ec2-user -i <<EOF
              set -ex
              /usr/bin/aws s3 cp s3://"$BUCKET"/scripts/ "$EC2_USER_BIN" --recursive
              find "$EC2_USER_BIN" -type f -exec chmod -v 700 {} \;

              source /home/ec2-user/anaconda3/bin/activate "$ENVIRONMENT"
              pip uninstall -y jupyterlab-widgets ipywidgets
              pip install jupyterlab-widgets==1.1.1
              pip install ipywidgets==7.7.1
              source /home/ec2-user/anaconda3/bin/deactivate

              #install netcat
              sudo yum install -y nmap-ncat

              EOF
      OnStart:
        - Content:
            Fn::Base64: !Sub |
              #!/bin/bash
              set -ex

              BUCKET="${pSageMakerBucket}"
              DIRECTORY="/home/ec2-user/SageMaker/"
              ENVIRONMENT="JupyterSystemEnv"

              # Copy previously backed up user notebooks
              /usr/bin/aws s3 cp s3://$BUCKET/${pName}/ $DIRECTORY --recursive
              # Reset bin permissions
              find "$DIRECTORY/bin/" -type f -exec chmod -v 700 {} \;
              # Copy common organization notebooks.  This will overwrite common notebooks previously saved to the home directory
              /usr/bin/aws s3 cp s3://$BUCKET/common-notebooks/ $DIRECTORY/common-notebooks/ --recursive
              # sudo chown "ec2-user":"ec2-user" $DIRECTORY --recursive

              # Use the system AWS, since ec2-user may change conda environments
              CMD="/usr/bin/aws s3 sync --exclude 'bin/*' --exclude '.sparkmagic/*' --exclude '*.ipynb_checkpoints/*' $DIRECTORY s3://$BUCKET/${pName}/ > /home/ec2-user/s3-backup.log 2>&1"
              chown "ec2-user":"ec2-user" $DIRECTORY --recursive
              # Backup the notebook details to S3 on 5 minute intervals
              cronjob="*/5 * * * * $CMD"
              echo "$cronjob" | crontab -u "ec2-user" -

              # Conda/Pip additions
              sudo -u ec2-user -i <<EOF
              source /home/ec2-user/anaconda3/bin/activate JupyterSystemEnv
              # Required for "%manage_spark"
              jupyter labextension install @jupyter-widgets/jupyterlab-manager
              source /home/ec2-user/anaconda3/bin/deactivate

              source /home/ec2-user/anaconda3/bin/activate "$ENVIRONMENT"
              pip uninstall -y jupyterlab-widgets ipywidgets
              pip install jupyterlab-widgets==1.1.1
              pip install ipywidgets==7.7.1
              source /home/ec2-user/anaconda3/bin/deactivate

              #install netcat
              sudo yum install -y nmap-ncat

              # Prevent iopub throttling
              sed -i.bak 's/^#c.NotebookApp.iopub_data_rate_limit.*$/c.NotebookApp.iopub_data_rate_limit = 1000000/' ~/.jupyter/jupyter_notebook_config.py
              # Session Manager for SSM connections to EMR nodes, if desired.
              sudo yum -y install https://s3.amazonaws.com/session-manager-downloads/plugin/latest/linux_64bit/session-manager-plugin.rpm

              EOF

  role:
    Type: "AWS::IAM::Role"
    Properties:
      PermissionsBoundary: !If [UsingPermissionBoundary, !Ref pPermissionBoundaryARN, !Ref "AWS::NoValue"]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "sagemaker.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: #"s3FullUserPathControl"
            !Sub
              - '${Prefix}s3FullUserPathControl${Suffix}'
              - Prefix: !If [UsingIamPrefix, !Ref pIamPrefix, '']
                Suffix: !If [UsingIamSuffix, !Ref pIamSuffix, '']
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "s3:*"
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${pSageMakerBucket}/${pName}/*"
              - Effect: "Allow"
                Action:
                  - "s3:ListObject"
                  - "s3:ListBucket"
                Resource: !Sub "arn:${AWS::Partition}:s3:::${pSageMakerBucket}"
        - PolicyName: #"s3ListPaths"
            !Sub
              - '${Prefix}s3ListPaths${Suffix}'
              - Prefix: !If [UsingIamPrefix, !Ref pIamPrefix, '']
                Suffix: !If [UsingIamSuffix, !Ref pIamSuffix, '']
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "s3:ListBucket"
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${pSageMakerBucket}"
                Condition:
                  StringLike:
                    s3:prefix:
                      - !Sub "${pName}/"
                      - "scripts/"
                      - "common-notebooks/"
              - Effect: "Allow"
                Action:
                  - "s3:GetObject"
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${pSageMakerBucket}/scripts/*"
                  - !Sub "arn:${AWS::Partition}:s3:::${pSageMakerBucket}/common-notebooks/*"
        - PolicyName: #"s3hailFullRead"
            !Sub
              - '${Prefix}s3hailFullRead${Suffix}'
              - Prefix: !If [UsingIamPrefix, !Ref pIamPrefix, '']
                Suffix: !If [UsingIamSuffix, !Ref pIamSuffix, '']
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:Get*"
                  - "s3:List*"
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${pHailBucket}/*"
                  - !Sub "arn:${AWS::Partition}:s3:::${pHailBucket}"
        - PolicyName: #"cloudwatchWrite"
            !Sub
              - '${Prefix}cloudwatchWrite${Suffix}'
              - Prefix: !If [UsingIamPrefix, !Ref pIamPrefix, '']
                Suffix: !If [UsingIamSuffix, !Ref pIamSuffix, '']
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogStream"
                  - "logs:CreateLogGroup"
                  - "logs:PutLogEvents"
                Resource: "*"
        - PolicyName: #"emrListClusters"
            !Sub
              - '${Prefix}emrListClusters${Suffix}'
              - Prefix: !If [UsingIamPrefix, !Ref pIamPrefix, '']
                Suffix: !If [UsingIamSuffix, !Ref pIamSuffix, '']
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "elasticmapreduce:ListInstances"
                  - "elasticmapreduce:ListBootstrapActions"
                  - "elasticmapreduce:ListClusters"
                  - "elasticmapreduce:DescribeCluster"
                  - "elasticmapreduce:ListInstanceGroups"
                Resource: "*"
      RoleName: #"sagemaker-${NotebookName}"
        !Sub
          - '${Prefix}sagemaker-${NotebookName}${Suffix}'
          - Prefix: !If [UsingIamPrefix, !Ref pIamPrefix, '']
            Suffix: !If [UsingIamSuffix, !Ref pIamSuffix, '']
            NotebookName: !Ref pName

  policyAllowSsmShell:
    Type: "AWS::IAM::Policy"
    Condition: "CondAllowSsmShell"
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "ssm:StartSession"
            Resource: !Sub "arn:${AWS::Partition}:ec2:*:*:instance/*"
            Condition:
              StringLike:
                "ssm:resourceTag/allow-emr-ssm":
                  - "true"
      PolicyName: #"ssm-session-by-tag"
        !Sub
          - '${Prefix}ssm-session-by-tag${Suffix}'
          - Prefix: !If [UsingIamPrefix, !Ref pIamPrefix, '']
            Suffix: !If [UsingIamSuffix, !Ref pIamSuffix, '']
      Roles:
        - !Ref role

Outputs:

  url:
    Description: "Console Notebook URL"
    Value: !Sub "https://console.aws.amazon.com/sagemaker/home?region=${AWS::Region}#/notebook-instances/${pName}"
